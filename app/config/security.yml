security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_BARMAN:       ROLE_USER
        ROLE_BIGBOSS:       [ROLE_BARMAN, ROLE_USER]
        ROLE_ADMIN:       [ROLE_BIGBOSS, ROLE_USER]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        barman:
            # the "barman" firewall is activated on the "/barman" subsection
            pattern: ^/barman.*
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                # if a user is not logged, he goes to the barman registration page
                login_path: cac_barman_user_register
                check_path: fos_user_security_check
            # if a user is not a barman (he gets a 403 http error), he can create a "barman" account
            access_denied_url: cac_barman_user_register
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
            logout:       true
            anonymous:    true
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/bars/new, role: ROLE_BIGBOSS }
        - { path: ^/admin/, role: ROLE_ADMIN }
